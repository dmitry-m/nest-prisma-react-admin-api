// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  fullName String?
  avatar   String?
  role     String?  @default("user")
  isAdmin  Boolean? @default(false)
}

model Customers {
  id              Int      @id @default(autoincrement())
  first_name      String?
  last_name       String?
  email           String?
  address         String?
  zipcode         String?
  city            String?
  avatar          String?
  birthday        DateTime @default(now())
  first_seen      DateTime @default(now())
  last_seen       DateTime @default(now())
  has_ordered     Boolean
  stateAbbr       String?
  latest_purchase DateTime @default(now())
  has_newsletter  Boolean
  groups          String[]
  nb_commands     Int
  total_spent     Int
}

model Categories {
  id   Int     @id @default(autoincrement())
  name String?
}

model Products {
  id          Int     @id @default(autoincrement())
  category_id Int
  reference   String?
  width       Int
  height      Int
  price       Int
  thumbnail   String?
  image       String?
  description String?
  stock       Int
  sales       Int
}

model Commands {
  id             Int            @id @default(autoincrement())
  reference      String?
  date           DateTime       @default(now())
  customer_id    Int
  basket         Json?
  total_ex_taxes Int
  delivery_fees  Int
  tax_rate       Int
  taxes          Int
  total          Int
  status         CommandsStatus @default(ORDERED)
  returned       Boolean
}

model Invoices {
  id             Int      @id @default(autoincrement())
  date           DateTime @default(now())
  command_id     Int
  customer_id    Int
  total_ex_taxes Int
  delivery_fees  Int
  tax_rate       Int
  taxes          Int
  total          Int
}

model Reviews {
  id          Int          @id @default(autoincrement())
  date        DateTime     @default(now())
  status      ReviewStatus @default(PENDING)
  command_id  Int
  product_id  Int
  customer_id Int
  rating      Int
  comment     String?
}

enum ReviewStatus {
  PENDING
  ACCEPTED
  REJECTED
}

enum CommandsStatus {
  ORDERED
  DELIVERED
  REVOKED
}
